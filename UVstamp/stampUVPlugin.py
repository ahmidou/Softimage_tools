# stampUVPlugin
# Initial code generated by Softimage SDK Wizard
# Executed Wed Oct 31 20:44:38 UTC+1100 2012 by ahmidoul
# 
# Tip: To add a command to this plug-in, right-click in the 
# script editor and choose Tools > Add Command.
import win32com.client
import sys
from win32com.client import constants as c

null = None
false = 0
true = 1
xsi = Application

def XSILoadPlugin( in_reg ):
	
	in_reg.Author = "Ahmidou"
	in_reg.Name = "stampUV"
	in_reg.Major = 1
	in_reg.Minor = 0

	in_reg.RegisterCommand("stampUV","stampUV")
	in_reg.RegisterMenu(c.siMenuTextureEditorToolsID,"stampUV_Menu",False,True)
	pluginPath =  XSIUtils.Slash.join(in_reg.Filename.split(XSIUtils.Slash)[:-1])
	if not pluginPath in sys.path:
		sys.path.append(pluginPath)
	return true

def XSIUnloadPlugin( in_reg ):
	strPluginName = in_reg.Name
	Application.LogMessage(str(strPluginName) + str(" has been unloaded."),c.siVerbose)
	return true

def stampUV_Init( in_ctxt ):
	oCmd = in_ctxt.Source
	oCmd.Description = ""
	oCmd.ReturnValue = true
	oArgs = oCmd.Arguments
	oArgs.Add( "fname", c.siArgumentInput, "UV" )
	oArgs.Add( "path", c.siArgumentInput, XSIUtils.Slash.join([Application.ActiveProject2.Path,"Pictures"]) )
	oArgs.AddWithHandler("uvProj","Collection");	
	return true

def stampUV_Execute(fname,path,uvProj):
	if uvProj.Count > 0:
		path = XSIUtils.BuildPath( path, fname+".eps" )
		from psfile import EPSFile
		X= 1000
		Y= 1000
		fd = EPSFile(path, X, Y, margin=0)
		for uv in uvProj:
			if uv.Type == "uvspace":
				geo = uv.Parent3DObject.Activeprimitive.Geometry
				faces = geo.Facets
				aUV = uv.elements.Array
				aClusterIndices = uv.Parent.elements.Array
				for face in faces:
					fId = face.Index
					#fd.append("  % face "+str(fId))
					fd.append(" 1 setlinejoin")
					samples =  face.Samples
					for i,sample in enumerate(samples):
						id= sample.Index
						x = aUV[0][id]*X
						y = aUV[1][id]*Y
						if i == 0:
							fd.append("  "+str(x)+" "+str(y)+" moveto")	
						else:
							fd.append("  "+str(x)+" "+str(y)+" lineto")
					fd.append("  closepath")	
		fd.append("""
		  % draw the constructed path
		  stroke
		""")
		fd.close() 
	return true

def stampUV_Menu_Init( in_ctxt ):
	oMenu = in_ctxt.Source
	oMenu.AddCallbackItem("stampUV","stampUV")
	return true

def stampUV(cback):
	v = cback.GetAttribute( "Target" )
	projName = v.GetAttributeValue("currentprojectionname")
	proj = v.GetAttributeValue("allprojectionnames")
	oColl = XSIFactory.CreateObject("XSI.Collection")
	oColl.SetAsText(proj)
	
	# PPG
	Pset = XSIFactory.CreateObject( "CustomProperty" )
	Pset.AddParameter3 ("folder", c.siString, XSIUtils.BuildPath( Application.ActiveProject2.Path,"Pictures"))
	Pset.AddParameter3 ("fileName", c.siString, projName.split(".")[-1])
	Pset.AddParameter3 ("perUVfile", c.siBool, 1)
	oLayout = Pset.PPGLayout
	oLayout.AddItem ("fileName", "fileName")
	oLayout.AddItem ("folder", "folder", c.siControlFolder)
	oLayout.AddItem ("perUVfile", "perUVfile")

	bCancel = xsi.InspectObj( Pset,None,None,c.siModal,False )
	if bCancel:
		xsi.Logmessage ("Operation cancelled")
	else:
		path =  Pset.folder.Value
		if Pset.perUVfile.Value ==	 1:
			for j in oColl:
				oColl1 = XSIFactory.CreateObject("XSI.Collection")
				oColl1.Add(j)
				xsi.stampUV(j.Name, path, oColl1)
		else:
			name =  Pset.fileName.Value
			xsi.stampUV(name, path, oColl)